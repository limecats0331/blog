{"componentChunkName":"component---src-templates-post-jsx","path":"/baekjoon_1912/","result":{"data":{"site":{"siteMetadata":{"title":"limecats"}},"markdownRemark":{"id":"9e6ddead-22db-5c97-99c8-e707a89a2297","excerpt":"문제링크 문제 요약 크기가 10만개 이하인 정수로 이루어진 수열이 주어질 때, 연속된 숫자들의 합 중에 가장 큰 수를 구하는 문제 풀이 과정 풀면서 중요했던 점은 이전까지의 과정에서 구한 최대 연속합을 더했을 때 손해(더  작아짐)라면 버리고 새로 더하는 것이다. 예시 index 0 1 2 3 4 5 6 7 8 9 arrs 10 -4 3 1 5 6 -35…","html":"<p><a href=\"https://www.acmicpc.net/problem/1912\">문제링크</a></p>\n<h2>문제 요약</h2>\n<p>크기가 10만개 이하인 정수로 이루어진 수열이 주어질 때, 연속된 숫자들의 합 중에 가장 큰 수를 구하는 문제</p>\n<h2>풀이 과정</h2>\n<p>풀면서 중요했던 점은 이전까지의 과정에서 구한 최대 연속합을 더했을 때 손해(더  작아짐)라면 버리고 새로 더하는 것이다.</p>\n<h3>예시</h3>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>arrs</td>\n<td>10</td>\n<td>-4</td>\n<td>3</td>\n<td>1</td>\n<td>5</td>\n<td>6</td>\n<td>-35</td>\n<td>12</td>\n<td>21</td>\n<td>-1</td>\n</tr>\n</tbody>\n</table>\n<p>수열이 다음과 같이 주어진다고 생각해본다.\n여기서 특정 구간까지의 연속합을 <code class=\"language-text\">dp</code>라고 생각한다.</p>\n<table>\n<thead>\n<tr>\n<th>index</th>\n<th>0</th>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n<th>5</th>\n<th>6</th>\n<th>7</th>\n<th>8</th>\n<th>9</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>arrs</td>\n<td>10</td>\n<td>-4</td>\n<td>3</td>\n<td>1</td>\n<td>5</td>\n<td>6</td>\n<td>-35</td>\n<td>12</td>\n<td>21</td>\n<td>-1</td>\n</tr>\n<tr>\n<td>dp</td>\n<td>10</td>\n<td>6</td>\n<td>9</td>\n<td>10</td>\n<td>15</td>\n<td>21</td>\n<td>-14</td>\n<td>12</td>\n<td>33</td>\n<td>32</td>\n</tr>\n</tbody>\n</table>\n<p>그럼 0까지의 연속합은 10이 되고 1까지의 연속합의 최대는 6이 된다.</p>\n<p>이렇게 6까진 마치 누적합과 같은 모습을 보이게 된다.</p>\n<p>하지만 6에서 7로 넘어갈 때를 보면 7의 입장에서 보면 이전까지의 연속합을 더 하는 것이 자신보다 더 작아지게 됨으로 가장 큰 연속합은 아무것도 더하지 않은 자기 자신이 된다.</p>\n<p>따라서 7부터 다시 연속된 합을 찾아가는  것이다.</p>\n<p>이것을 코드로 표현한다면 다음과 같이 표현할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> arrs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> arrs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">BufferedReader</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">InputStreamReader</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">StringTokenizer</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> algo_1912 <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token comment\">//입력</span>\n        <span class=\"token class-name\">BufferedReader</span> br <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BufferedReader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">InputStreamReader</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">//숫자를 따로 저장할 필요없이 입력받은 대로 찾을 수 있음.</span>\n        <span class=\"token class-name\">StringTokenizer</span> st <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringTokenizer</span><span class=\"token punctuation\">(</span>br<span class=\"token punctuation\">.</span><span class=\"token function\">readLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">.</span><span class=\"token function\">nextToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//dp[0]는 첫번째 숫자와 같다.</span>\n        <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//숫자의 갯수만큼 반복해준다.</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">.</span><span class=\"token function\">nextToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> num<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            max <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>배운 점</h2>\n<p>앞까지 구한 것이 손해라면 새로 시작한다는 개념 생각할 수 있게 되어서 좋았다.</p>","frontmatter":{"title":"백준 1912번 연속합","date":"August 13, 2022","update":"August 13, 2022","tags":["Baekjoon","DP"],"series":"Algorithm"},"fields":{"slug":"/baekjoon_1912/","readingTime":{"minutes":3.24}}},"seriesList":{"edges":[{"node":{"id":"9e6ddead-22db-5c97-99c8-e707a89a2297","fields":{"slug":"/baekjoon_1912/"},"frontmatter":{"title":"백준 1912번 연속합"}}},{"node":{"id":"a9282f4b-5980-5e7c-ab5f-9ddfdfe7f98a","fields":{"slug":"/baekjoon_2457/"},"frontmatter":{"title":"백준 2457번 공주님의 정원"}}},{"node":{"id":"85ee0f72-fdf5-5b60-82e2-bdddf232cff8","fields":{"slug":"/Next_permutation/"},"frontmatter":{"title":"Next Permutation"}}},{"node":{"id":"c40ed68b-a6e4-57a7-8edd-5389ca1d5859","fields":{"slug":"/LIS/"},"frontmatter":{"title":"LIS"}}}]},"previous":null,"next":{"fields":{"slug":"/baekjoon_2457/"},"frontmatter":{"title":"백준 2457번 공주님의 정원"}}},"pageContext":{"id":"9e6ddead-22db-5c97-99c8-e707a89a2297","series":"Algorithm","previousPostId":null,"nextPostId":"a9282f4b-5980-5e7c-ab5f-9ddfdfe7f98a"}},"staticQueryHashes":[]}